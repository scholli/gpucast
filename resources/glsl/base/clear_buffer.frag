/********************************************************************************
*
* Copyright (C) 2007-2011 Bauhaus-Universitaet Weimar
*
*********************************************************************************
*
*  module     : clear_buffer.frag
*  project    : gpucast
*  description:
*
********************************************************************************/
#extension GL_EXT_gpu_shader4 : enable
#extension GL_EXT_shader_image_load_store : enable

/********************************************************************************
* constants
********************************************************************************/

/********************************************************************************
* uniforms
********************************************************************************/
layout (size4x32) uniform imageBuffer   gradientbuffer;
layout (size4x32) uniform imageBuffer   colorbuffer;
uniform int                             width;
uniform int                             height;

/********************************************************************************
* input
********************************************************************************/

/********************************************************************************
* output
********************************************************************************/

/********************************************************************************
* functions
********************************************************************************/

/********************************************************************************
* clean pass cleans index image texture
********************************************************************************/
void main(void)
{
  // write result into index texture
  ivec2 coords = ivec2(gl_FragCoord.xy);
  int   index  = coords.y * width + coords.x;

  imageStore ( gradientbuffer,  index, vec4(0.0) );
  imageStore ( colorbuffer,     index, vec4(0.0) );

  discard; // do not write into framebuffer
}



